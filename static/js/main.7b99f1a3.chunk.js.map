{"version":3,"sources":["svg/cross.svg","svg/nought.svg","svg/noughtMuted.svg","svg/tick.svg","svg/pluss.svg","content/header/header.jsx","content/game/playersNames.jsx","content/clock/clock.jsx","service/database.js","content/game/game.jsx","content/menu/gameCard.jsx","content/menu/menu.jsx","content/createGame/createGame.jsx","App.js","testComponent.jsx","index.js"],"names":["module","exports","Header","react_default","a","createElement","className","react_router_dom","to","Component","PlayersNames","signPlayer2","nought","border","this","props","userName","player1","player2","noughtMuted","activePlayer1","activePlayer2","visibilityPlayer2","undefined","strokeCounter","src","cross","height","width","Clock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","elapsedTime","prevProps","startTime","tick","_this2","timerId","setInterval","clearInterval","timePlayed","Date","now","setState","time","toLocaleTimeString","Fragment","Database","key","value","table","get","push","localStorage","setItem","JSON","stringify","console","log","parse","getItem","removeItem","clear","Game","surrenderClick","bind","assertThisInitialized","menuClick","checkGameState","clickGameCell","getData","isOdd","endGame","n","_ref2","slicedToArray","_ref","indexRow","indexColumn","playerTurn","game","gameField","winner","newGameField","map","item","index","rewriteGame","assign","lastActivity","lastPosition","games","splice","match","params","id","set","cellNumber","startingPoint","numberToWin","range","horizontalSeries","xAxis","length","verticalSeries","yAxis","diagonalSeries","backDiagonalSeries","e","_this3","preventDefault","history","gameStatus","_this4","gamePhase","gameVieW","_this5","_this6","alert","textDisplay","customColumn","buttonName","buttonHandle","clock","endGameText","clock_clock","gameCellHeight","playersNames","sign","onClick","style","flexBasis","alt","withRouter","GameCard","bgColor","textColor1","textColor2","visibility","visibilityTick1","visibilityTick2","Menu","callCreateGame","handleClick","userNameInputChange","i","standbyTime","stateChanger","target","name","onChange","maxLength","cursor","gameCard","pluss","CreateGame","rowInput","columnInput","numberToWinInput","rowInputError","columnInputError","numberToWinInputError","rowInputHighlight","columnInputHighlight","numberToWinInputHighlight","backToMenu","createGame","handleInputChange","_this$setState","error","highlight","validationMessage","maxMoves","Math","round","highlightClass","defineProperty","event","row","Number","column","Array","fill","newGame","noValidate","maxWidth","action","method","htmlFor","type","aria-describedby","pattern","required","App","selectGame","data","basename","header","react_router","path","render","menu","createGame_createGame","game_game","component","NoMatch","from","location","pathname","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b99f1a3.chunk.js","sourcesContent":["module.exports = \"/static/media/cross.57c94804.svg\";","module.exports = \"/static/media/nought.fac8de41.svg\";","module.exports = \"/static/media/noughtMuted.f2ca6631.svg\";","module.exports = \"/static/media/tick.f498b4c6.svg\";","module.exports = \"/static/media/pluss.7fef4e83.svg\";","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <header className=\"bg-black px-fixed py-3 shadow\" >\r\n                <Link to=\"/\" className=\"text-white text-decoration-none\">Tic Tac Toe\r\n                    {/* <a className=\"text-white text-decoration-none\" onClick={this.goToMenu} href=\"#\">Tic Tac Toe</a> */}\r\n                </Link>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport cross from '../../svg/cross.svg';\r\nimport nought from '../../svg/nought.svg';\r\nimport noughtMuted from '../../svg/noughtMuted.svg';\r\n\r\nclass PlayersNames extends Component{\r\n\r\n    render(){\r\n\r\n        let signPlayer2=nought;\r\n        let border=\"border-bottom border-2 border-black\";\r\n        if (this.props.userName!==this.props.player1&&this.props.userName!==this.props.player2){\r\n            signPlayer2=noughtMuted;\r\n            border=\"border-bottom border-2 border-muted\";\r\n        }\r\n\r\n        let visibilityPlayer2=\"visible\";\r\n        if (this.props.player2===undefined){\r\n            visibilityPlayer2=\"invisible\";\r\n        }\r\n\r\n        let activePlayer1;\r\n        let activePlayer2;\r\n        if (!(this.props.strokeCounter%2)){\r\n            activePlayer1=border;\r\n            activePlayer2=undefined;\r\n        }else if (!!(this.props.strokeCounter%2)){\r\n            activePlayer1=undefined;\r\n            activePlayer2=border;\r\n        }else {\r\n            activePlayer1=undefined;\r\n            activePlayer2=undefined;\r\n        }\r\n    \r\n        return(\r\n            <div className={\"d-flex flex-shrink-0 justify-content-between \"}>\r\n                <div className={'d-flex align-items-center pb-1 mr-1'+' '+activePlayer1}>\r\n                    <span className=\"pr-1\" >{this.props.player1}</span>\r\n                    <img src={cross} height=\"20\" width=\"20\"/>\r\n                </div>\r\n                <div className={'d-flex align-items-center pb-1'+' '+activePlayer2+' '+visibilityPlayer2}>\r\n                    <img className=\"pr-1\" src={signPlayer2} height=\"20\" />\r\n                    <span>{this.props.player2}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayersNames;","import React, {Component} from 'react';\r\n\r\nclass Clock extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            elapsedTime: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.startTime!==this.props.startTime)\r\n        this.tick();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timerId=setInterval(\r\n            ()=>this.tick(),\r\n            1000\r\n        );\r\n        this.tick();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    tick(){\r\n        let timePlayed=Date.now()-this.props.startTime+1000;\r\n        this.setState(()=>({\r\n            elapsedTime: timePlayed,\r\n        }));\r\n    }\r\n\r\n    render(){\r\n        let date=new Date(this.state.elapsedTime-(3*60*60*1000));\r\n        let time=date.toLocaleTimeString();\r\n        \r\n        return(<React.Fragment>{time}</React.Fragment>);\r\n    }\r\n}\r\n\r\nexport default Clock;","class Database{\r\n    static push(key,value){\r\n        let table=this.get(key);\r\n        if (table===null){\r\n            table=[];\r\n        }\r\n        table.push(value);\r\n        localStorage.setItem(key,JSON.stringify(table))\r\n        console.log(\"table\",table)\r\n    }\r\n    static set(key,value){\r\n        localStorage.setItem(key,JSON.stringify(value))\r\n    }\r\n    static get(key){\r\n        return JSON.parse(localStorage.getItem(key));\r\n    }\r\n    static remove(key){\r\n        localStorage.removeItem(key);\r\n    }\r\n    static clear(){\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nexport default Database;","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport PlayersNames from './playersNames';\r\nimport Clock from '../clock/clock';\r\nimport Database from '../../service/database';\r\nimport cross from '../../svg/cross.svg';\r\nimport nought from '../../svg/nought.svg';\r\nimport noughtMuted from '../../svg/noughtMuted.svg';\r\n\r\nclass Game extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={};\r\n        this.surrenderClick=this.surrenderClick.bind(this);\r\n        this.menuClick=this.menuClick.bind(this);\r\n        this.checkGameState=this.checkGameState.bind(this);\r\n        this.clickGameCell=this.clickGameCell.bind(this);\r\n        this.getData=this.getData.bind(this);\r\n        this.isOdd=this.isOdd.bind(this);\r\n        this.endGame=this.endGame.bind(this);\r\n    }\r\n\r\n    isOdd(n){\r\n        return !!(n%2);\r\n    }\r\n\r\n    clickGameCell([indexRow,indexColumn]){\r\n        let playerTurn=!this.isOdd(this.state.game.strokeCounter)?this.state.game.player1:this.state.game.player2;\r\n        if(this.state.game.gameField[indexRow][indexColumn]===null&&\r\n            this.state.game.winner===0&&\r\n            this.props.userName===playerTurn\r\n        ){\r\n            this.setState(state=>{\r\n                const newGameField=state.game.gameField.map((item,index)=>{\r\n                    if (index===indexRow){\r\n                        return (\r\n                            item.map((item,index)=>{\r\n                                if (index===indexColumn){\r\n                                    return item=this.isOdd(state.game.strokeCounter+1);\r\n                                }\r\n                                else return item;\r\n                            })\r\n                        );\r\n                    }\r\n                    else return item;\r\n                });\r\n\r\n                let rewriteGame=Object.assign({},state.game);\r\n                rewriteGame.lastActivity=Date.now();\r\n                rewriteGame.strokeCounter=state.game.strokeCounter+1;\r\n                rewriteGame.lastPosition=[indexRow,indexColumn];\r\n                rewriteGame.gameField=newGameField;\r\n                let games=Database.get(\"games\");\r\n                games.splice(this.props.match.params.id,1,rewriteGame);\r\n                Database.set(\"games\",games);                \r\n                return {\r\n                    game: rewriteGame,\r\n                };\r\n            }); \r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (this.state.game!==undefined&&this.state.game!==\"deleted\"){\r\n            if (this.state.game.winner===0){\r\n                if (this.checkGameState()){\r\n                    let winner=this.isOdd(this.state.game.strokeCounter)?1:2;\r\n                    this.setState({game: this.endGame(winner)})\r\n                }else if(this.state.game.cellNumber===this.state.game.strokeCounter){\r\n                    let drawGame=5;\r\n                    this.setState({game:this.endGame(drawGame)})\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkGameState(){\r\n        const startingPoint=this.state.game.lastPosition;\r\n        const numberToWin=this.state.game.numberToWin;\r\n        const range=numberToWin-1;\r\n        const gameField=this.state.game.gameField;\r\n        const strokeCounter=this.state.game.strokeCounter;\r\n\r\n        let horizontalSeries=0;\r\n        for(let xAxis=startingPoint[1]-range; xAxis<=startingPoint[1]+range; xAxis++){\r\n            if (xAxis>=0 && xAxis<gameField[startingPoint[0]].length){\r\n                if (gameField[startingPoint[0]][xAxis]==this.isOdd(strokeCounter)){\r\n                    horizontalSeries++;\r\n                    if (horizontalSeries==numberToWin) return true;\r\n                }\r\n                else {\r\n                    horizontalSeries=0;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let verticalSeries=0;\r\n        for(let yAxis=startingPoint[0]-range; yAxis<=startingPoint[0]+range; yAxis++){\r\n            if (yAxis>=0 && yAxis<gameField.length){\r\n                if (gameField[yAxis][startingPoint[1]]==this.isOdd(strokeCounter)){\r\n                    verticalSeries++;\r\n                    if (verticalSeries==numberToWin) return true;\r\n                }\r\n                else {\r\n                    verticalSeries=0;\r\n                }\r\n            }\r\n        }\r\n\r\n        let diagonalSeries=0;\r\n        for(let yAxis=startingPoint[0]-range, xAxis=startingPoint[1]-range; yAxis<=startingPoint[0]+range, xAxis<=startingPoint[1]+range; yAxis++, xAxis++){\r\n            if (yAxis>=0 && yAxis<gameField.length && xAxis>=0 && xAxis<gameField[startingPoint[0]].length){\r\n                if (gameField[yAxis][xAxis]==this.isOdd(strokeCounter)){\r\n                    diagonalSeries++;\r\n                    if (diagonalSeries==numberToWin) return true;\r\n                }\r\n                else {\r\n                    diagonalSeries=0;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let backDiagonalSeries=0;\r\n        for(let yAxis=startingPoint[0]+range, xAxis=startingPoint[1]-range; yAxis>=startingPoint[0]-range, xAxis<=startingPoint[1]+range; yAxis--, xAxis++){\r\n            if (yAxis>=0 && yAxis<gameField.length && xAxis>=0 && xAxis<gameField[startingPoint[0]].length){\r\n                if (gameField[yAxis][xAxis]==this.isOdd(strokeCounter)){\r\n                    backDiagonalSeries++;\r\n                    if (backDiagonalSeries==numberToWin) return true;\r\n                }\r\n                else {\r\n                    backDiagonalSeries=0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    surrenderClick(e){\r\n        e.preventDefault();\r\n        if (this.state.game.winner===0){\r\n            let winner=(()=>{\r\n                if (this.props.userName==this.state.game.player1){return 3;}\r\n                else if (this.props.userName==this.state.game.player2){return 4;}\r\n            })();\r\n            this.setState({game: this.endGame(winner)})\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    menuClick(e){\r\n        e.preventDefault();\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    endGame(gameStatus){\r\n        let rewriteGame=Object.assign({},this.state.game);\r\n        rewriteGame.lastActivity=Date.now();\r\n        rewriteGame.strokeCounter=this.state.game.strokeCounter-1;\r\n        rewriteGame.winner=gameStatus;\r\n        let games=Database.get(\"games\");\r\n        games.splice(this.props.match.params.id,1,rewriteGame);\r\n        Database.set(\"games\",games); \r\n        return rewriteGame;\r\n    }\r\n\r\n    getData(){\r\n        let games=Database.get(\"games\");\r\n        if (games===null){\r\n            this.props.history.push(\"/\");\r\n        }\r\n        else{\r\n            let game=games[this.props.match.params.id];\r\n            this.setState(state=>{\r\n                if(game===\"deleted\"){\r\n                    if(state.game!==\"deleted\"){\r\n                        return {game:\"deleted\"}\r\n                    }\r\n                }\r\n                else{\r\n                    if(game.player2===undefined&&game.player1!==this.props.userName){\r\n                        game.player2=this.props.userName;\r\n                        let games=Database.get(\"games\");\r\n                        games.splice(this.props.match.params.id,1,game);\r\n                        Database.set(\"games\",games);\r\n                        return {game:game};\r\n                    }\r\n                    else if(\r\n                        state.game===undefined||\r\n                        state.game.player2!=game.player2||\r\n                        state.game.startTime!=game.startTime||\r\n                        state.game.gamePhase!=game.gamePhase||\r\n                        state.game.gameVieW!=game.gameVieW||\r\n                        state.game.strokeCounter!=game.strokeCounter||\r\n                        state.game.winner!=game.winner\r\n                    ){\r\n                        return {game:game};\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timerId=setInterval(\r\n            ()=>this.getData(),\r\n            1000\r\n        );\r\n        this.getData();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    render(){\r\n    if(this.state.game===\"deleted\"){\r\n        return (\r\n            <div>\r\n                {(()=>{\r\n                    alert(\"истекло время жизни\");\r\n                    this.props.history.push(\"/\");\r\n                })()}\r\n            </div>\r\n            );\r\n    }\r\n    else if (this.state.game!==undefined){\r\n\r\n            let textDisplay=\"\";\r\n            let signPlayer2=nought;\r\n            let customColumn=\"customColumn\";\r\n            let buttonName=\"SURRENDER\";\r\n            let buttonHandle=this.surrenderClick;\r\n            if(this.state.game.player2===undefined||this.state.game.winner!==0){\r\n                buttonName=\"BACK\";\r\n                buttonHandle=this.menuClick;\r\n            }\r\n            if (this.props.userName!==this.state.game.player1&&this.props.userName!==this.state.game.player2){\r\n                textDisplay=\"text-muted\";\r\n                signPlayer2=noughtMuted;\r\n                customColumn=\"customColumnMuted\";\r\n                buttonName=\"BACK\";\r\n                buttonHandle=this.menuClick;\r\n            }\r\n\r\n            let date=new Date(this.state.game.lastActivity-this.state.game.startTime-(3*60*60*1000));\r\n            let clock=date.toLocaleTimeString();\r\n            let endGameText=\"\";\r\n            switch(this.state.game.winner){\r\n                case 1:\r\n                    endGameText=\"Winner \"+this.state.game.player1;\r\n                    break;\r\n                case 2:\r\n                    endGameText=\"Winner \"+this.state.game.player2;\r\n                    break;\r\n                case 3:\r\n                    endGameText=\"Surrender \"+this.state.game.player1;\r\n                    break;\r\n                case 4:\r\n                    endGameText=\"Surrender \"+this.state.game.player2;\r\n                    break;\r\n                case 5:\r\n                    endGameText=\"Draw Game\";\r\n                    break;\r\n                default:\r\n                    clock=<Clock startTime={this.state.game.startTime} />\r\n            }\r\n\r\n            \r\n            let gameCellHeight=40/this.state.game.gameField.length+\"vmin\";\r\n\r\n            return(\r\n                <React.Fragment>\r\n                    <div className={textDisplay}>\r\n                        <PlayersNames userName={this.props.userName} player1={this.state.game.player1} player2={this.state.game.player2} strokeCounter={this.state.game.strokeCounter}/>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column align-items-center flex-grow-0 flex-shrink-1 my-4 overflow-auto\">\r\n                        {this.state.game.gameField.map((item,indexRow)=>{\r\n                            return (\r\n                                <div className=\"customRow\" key={indexRow} >\r\n                                    {item.map((item,indexColumn)=>{\r\n                                        let sign=null;\r\n                                        if (item==1) sign=cross;\r\n                                        else if (item==0) sign=signPlayer2;\r\n                                        else sign=null;\r\n                                        if (indexRow===this.state.game.gameField.length-1){\r\n                                            if (this.props.userName!==this.state.game.player1&&this.props.userName!==this.state.game.player2){\r\n                                                customColumn=\"customColumnLastRowMuted\";\r\n                                            }\r\n                                            else customColumn=\"customColumnLastRow\";\r\n                                        }\r\n                                        return(\r\n                                            <div className={customColumn} onClick={()=>this.clickGameCell([indexRow,indexColumn])} key={indexColumn} style={{flexBasis: gameCellHeight}}>\r\n                                                <img src={sign} className=\"gameCell img-fluid\" alt=\"\"/>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"endGame\">{endGameText}</div>\r\n                    \r\n                    <div className={\"mx-auto my-4 h2 \"+textDisplay}>\r\n                        {clock}\r\n                    </div>\r\n                    \r\n                    <button className=\"flex-shrink-0 mx-auto btn btn-buttonColor\" style={{width:\"10rem\"}} onClick={buttonHandle}>{buttonName}</button>\r\n\r\n                </React.Fragment>\r\n            ); \r\n        } \r\n    else {\r\n        return(\r\n            <div>...Loading</div>\r\n        );\r\n    }\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);","import React, {Component} from 'react';\r\nimport Clock from '../clock/clock';\r\nimport tick from '../../svg/tick.svg';\r\n\r\nclass GameCard extends Component{\r\n\r\n    render(){\r\n        let gamePhase=this.props.game.gamePhase;\r\n        let player1=this.props.game.player1;\r\n        let player2=this.props.game.player2;\r\n        let winner=this.props.game.winner;\r\n        let startTime=this.props.game.startTime;\r\n        let lastActivity=this.props.game.lastActivity;\r\n\r\n        let bgColor;\r\n        let textColor1;\r\n        let textColor2;\r\n        let visibility;\r\n        let visibilityTick1;\r\n        let visibilityTick2;\r\n\r\n        let clock=<Clock startTime={startTime} />;\r\n        if (winner!==0){\r\n            let date=new Date(lastActivity-startTime-(3*60*60*1000));\r\n            clock=date.toLocaleTimeString();\r\n        }\r\n\r\n        if (player2===undefined){\r\n            bgColor=\"bg-bgGameCardColor1\";\r\n            textColor1=\"text-white\";\r\n            textColor2=\"text-white\";\r\n            visibility=\"invisible\";\r\n            visibilityTick1=\"invisible\";\r\n            visibilityTick2=\"invisible\";\r\n        }\r\n        else if(winner===0){\r\n            bgColor=\"bg-bgGameCardColor2\";\r\n            textColor1=\"text-white\";\r\n            textColor2=\"text-white\";\r\n            visibility=\"visible\";\r\n            visibilityTick1=\"invisible\";\r\n            visibilityTick2=\"invisible\";\r\n        }\r\n        else{\r\n            bgColor=\"bg-bgGameCardColor3\";\r\n            visibility=\"visible\";\r\n            if (winner===1||winner===4){\r\n                textColor1=\"text-winnerColor\";\r\n                textColor2=\"text-black\";\r\n                visibilityTick1=\"visible\";\r\n                visibilityTick2=\"invisible\";\r\n            }\r\n            else if (winner===2||winner===3){\r\n                textColor1=\"text-black\";\r\n                textColor2=\"text-winnerColor\";\r\n                visibilityTick1=\"invisible\";\r\n                visibilityTick2=\"visible\";\r\n            }\r\n            else{\r\n                textColor1=\"text-black\";\r\n                textColor2=\"text-black\";\r\n                visibilityTick1=\"invisible\";\r\n                visibilityTick2=\"invisible\";\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div className={\"gameCard p-1 \"+bgColor}>\r\n                <div className=\"p-1 \">\r\n                    <div className=\"\" >\r\n                        <span className={\"pr-1 \"+textColor1}>{player1}</span>\r\n                        <img className={visibilityTick1} src={tick}/>\r\n                    </div>\r\n                    <div className={\"border-top border-black pt-1 \"+visibility}>\r\n                        <span className={\"pr-1 \"+textColor2}>{player2}</span>\r\n                        <img className={visibilityTick2} src={tick}/>\r\n                    </div>\r\n                </div>    \r\n                <div className=\"\">\r\n                    {clock}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameCard;","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Database from '../../service/database';\r\nimport GameCard from './gameCard';\r\nimport pluss from '../../svg/pluss.svg'\r\n\r\nclass Menu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            games:[],\r\n        }\r\n        this.callCreateGame=this.callCreateGame.bind(this);\r\n        this.handleClick=this.handleClick.bind(this);\r\n        this.getData=this.getData.bind(this);\r\n        this.userNameInputChange=this.userNameInputChange.bind(this);\r\n    }\r\n\r\n    handleClick(index){\r\n        this.props.history.push(\"/game/\"+index);\r\n    }\r\n\r\n    callCreateGame(e){\r\n        e.preventDefault();\r\n        this.props.history.push(\"/createGame\");\r\n    }\r\n\r\n    getData(){\r\n      let games=Database.get(\"games\");\r\n      this.setState(state=>{\r\n        if(games===null){\r\n          if(state.games.length!==0){\r\n            return {games:[]};\r\n          }\r\n        }\r\n        else {\r\n          for (let i=0;i<games.length;i++){\r\n            if (games[i].lastActivity+this.props.standbyTime<Date.now()){\r\n              games.splice(i,1,\"deleted\");\r\n              Database.set(\"games\",games);\r\n            }\r\n            if(games[i]===\"deleted\"){\r\n              if(state.games[i]!=games[i]){\r\n                return {games:games};\r\n              }\r\n            }\r\n            else{\r\n              if (\r\n                state.games.length!=games.length||\r\n                state.games[i].winner!=games[i].winner||\r\n                state.games[i].player1!=games[i].player1||\r\n                state.games[i].player2!=games[i].player2\r\n              ){\r\n                return {games:games};\r\n              }\r\n            }\r\n          } \r\n        }\r\n      });\r\n    }\r\n    \r\n    userNameInputChange(e){\r\n      this.props.stateChanger({userName: e.target.value});\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.timerId=setInterval(\r\n          ()=>this.getData(),\r\n          1000\r\n        );\r\n        this.getData();\r\n    }\r\n  \r\n    componentWillUnmount(){\r\n      clearInterval(this.timerId);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div>\r\n                    <input className=\"pb-2 flex-shrink-0 border-bottom d-flex form-control-plaintext\" style={{width:\"70%\"}} name=\"userNameInput\" value={this.props.userName} onChange={this.userNameInputChange} maxLength=\"20\" />\r\n                </div>\r\n                <div className=\"d-flex flex-wrap flex-grow-0 borde borde-3 flex-shrink-1 my-4 overflow-auto gameCardList\">\r\n                    {this.state.games.map((item,index)=>{\r\n                        if(this.state.games[index]!==\"deleted\"){\r\n                            return (\r\n                                <div key={index} onClick={()=>{this.handleClick(index)}} style={{cursor: \"pointer\"}}>\r\n                                    <GameCard game={this.state.games[index]} />\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n                <button className=\"flex-shrink-0 mt-auto ml-auto btn btn-buttonColor shadow rounded-circle\" style={{width:\"50px\", height:\"50px\"}} onClick={this.callCreateGame}>\r\n                    <img src={pluss} className=\"img-fluid\" alt=\"\"/>\r\n                </button>\r\n            </React.Fragment>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default withRouter(Menu);","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Database from '../../service/database'\r\nimport cross from '../../svg/cross.svg';\r\nimport nought from '../../svg/nought.svg';\r\nimport noughtMuted from '../../svg/noughtMuted.svg';\r\n\r\nclass CreateGame extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            rowInput: '4',\r\n            columnInput: '4',\r\n            numberToWinInput: '4',\r\n            rowInputError:'',\r\n            columnInputError:'',\r\n            numberToWinInputError:'',\r\n            rowInputHighlight:'',\r\n            columnInputHighlight:'',\r\n            numberToWinInputHighlight:'',\r\n        }\r\n        this.backToMenu=this.backToMenu.bind(this);\r\n        this.createGame=this.createGame.bind(this);\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(e){\r\n        e.preventDefault();\r\n        const name=e.target.name;\r\n        const error=name+'Error';\r\n        const highlight=name+'Highlight';\r\n        \r\n        if(name==\"numberToWinInput\"){\r\n            var numberToWinInputError=e.target.validationMessage;\r\n            var maxMoves=Math.round(+this.state.rowInput*this.state.columnInput/2);\r\n            if((+e.target.value>+this.state.rowInput)&&(+e.target.value>+this.state.columnInput)||(+e.target.value>maxMoves)){\r\n                numberToWinInputError=\"больше чем игровое поле\";\r\n            }\r\n        }\r\n        else if(name==\"rowInput\"){\r\n            var maxMoves=Math.round(+e.target.value*this.state.columnInput/2);\r\n            if((+this.state.numberToWinInput>+e.target.value)&&(+this.state.numberToWinInput>+this.state.columnInput)||(+this.state.numberToWinInput>maxMoves)){\r\n                numberToWinInputError=\"больше чем игровое поле\";\r\n            }\r\n        }\r\n        else if(name==\"columnInput\"){\r\n            var maxMoves=Math.round(+this.state.rowInput*e.target.value/2);\r\n            if((+this.state.numberToWinInput>+this.state.rowInput)&&(+this.state.numberToWinInput>+e.target.value)||(+this.state.numberToWinInput>maxMoves)){\r\n                numberToWinInputError=\"больше чем игровое поле\";\r\n            }\r\n        }\r\n        const numberToWinInputHighlight=numberToWinInputError?\"is-invalid\":\"is-valid\";\r\n\r\n        const highlightClass=e.target.validationMessage?\"is-invalid\":\"is-valid\";\r\n        this.setState({\r\n            [name]: e.target.value,\r\n            [error]: e.target.validationMessage,\r\n            [highlight]: highlightClass,\r\n            numberToWinInputError: numberToWinInputError,\r\n            numberToWinInputHighlight: numberToWinInputHighlight,\r\n        });\r\n    }\r\n    \r\n    backToMenu(e){\r\n        e.preventDefault();        \r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    createGame(event){\r\n        event.preventDefault();\r\n        if (!this.state.rowInputError&&!this.state.columnInputError&&!this.state.numberToWinInputError){\r\n            let row=Number(this.state.rowInput);\r\n            let column=Number(this.state.columnInput);\r\n            let numberToWin=Number(this.state.numberToWinInput);\r\n            let gameField=new Array(row);\r\n\r\n            for (let i=0;i<gameField.length;i++){\r\n                gameField[i]=new Array(column);\r\n                gameField[i].fill(null);\r\n            }\r\n\r\n            let newGame={\r\n                // gameId: localStorage.length,\r\n                startTime: Date.now(),\r\n                lastActivity: Date.now(),\r\n                strokeCounter: 0,\r\n                numberToWin: numberToWin,\r\n                lastPosition: [0,0],\r\n                gameField: gameField,\r\n                cellNumber: row*column,\r\n                winner: 0,//1-player1,2-player2,3-surrender pl1,4-surrender pl2,5-draw game\r\n                player1: this.props.userName,\r\n                player2: undefined,\r\n                // \"Player 2\",\r\n            }\r\n            Database.push(\"games\",newGame)\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <form className=\"mx-auto p-4 mb-4 bg-white shadow-sm rounded needs-validation\" noValidate style={{maxWidth: \"700px\"}} action=\"#\" method=\"post\">\r\n                <div className=\"mb-4 mx-auto flex-grow-1\" style={{maxWidth: '300px'}}>\r\n\r\n                    <div className=\"form-group row\">\r\n                        {/* <div className=\"col-sm-7\"> */}\r\n                            <label htmlFor=\"inputRow\" className=\"col-sm-7 col-form-label\">Number of rows\r\n                                <small id=\"inputRowHelpBlock\" className=\"form-text text-muted\">1-999</small>\r\n                            </label>\r\n                        {/* </div> */}\r\n                        <div className=\"col-sm-5\">\r\n                            <input type=\"text\" className={\"form-control \"+this.state.rowInputHighlight} id=\"inputRow\" value={this.state.rowInput} name=\"rowInput\" onChange={this.handleInputChange} aria-describedby=\"inputRowHelpBlock\" pattern=\"[1-9]{1}\\d{0,2}\" required/>\r\n                        </div>\r\n                        <div className=\"invalid-feedback d-block px-3\">\r\n                            {this.state.rowInputError}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"inputColumn\" className=\"col-sm-7 col-form-label\">Number of columns\r\n                            <small id=\"inputColumnHelpBlock\" className=\"form-text text-muted\">1-999</small>\r\n                        </label>\r\n                        <div className=\"col-sm-5\">\r\n                            <input type=\"text\" className={\"form-control \"+this.state.columnInputHighlight} id=\"inputColumn\" value={this.state.columnInput} name=\"columnInput\" onChange={this.handleInputChange} aria-describedby=\"inputColumnHelpBlock\" pattern=\"[1-9]{1}\\d{0,2}\" required/>\r\n                        </div>\r\n                        <div className=\"invalid-feedback d-block px-3\">\r\n                            {this.state.columnInputError}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"inputNumberToWin\" className=\"col-sm-7 col-form-label\">Number to win\r\n                            <small id=\"inputNumberToWinHelpBlock\" className=\"form-text text-muted\">more then null and less than max field</small>\r\n                        </label>\r\n                        <div className=\"col-sm-5\">\r\n                            <input type=\"text\" className={\"form-control \"+this.state.numberToWinInputHighlight} id=\"inputNumberToWin\" value={this.state.numberToWinInput} name=\"numberToWinInput\" onChange={this.handleInputChange} aria-describedby=\"inputNumberToWinHelpBlock\" pattern=\"[1-9]{1}\\d{0,2}\" required/>\r\n                        </div>\r\n                        <div className=\"invalid-feedback d-block px-3\">\r\n                            {this.state.numberToWinInputError}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row justify-content-between\">\r\n                        <div className=\"col-auto pb-2\">\r\n                            <button className=\"btn btn-warning \" type=\"reset\" onClick={this.backToMenu}>Cancel</button>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <button className=\"btn btn-buttonColor \" type=\"submit\" onClick={this.createGame}>Create game</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default withRouter(CreateGame);","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route,Switch,Redirect} from 'react-router-dom';\nimport './styles/App.scss';\nimport Header from './content/header/header';\nimport Game from './content/game/game';\nimport Menu from './content/menu/menu';\nimport CreateGame from './content/createGame/createGame';\nimport TestComponent from './testComponent';\n\nclass App extends Component {\n  constructor(props){\n      super(props);\n      this.state={\n          selectGame: 0,\n          standbyTime: (1*60*1000),//60sec//5 min\n          userName: \"user Name\",\n      }\n      this.stateChanger=this.stateChanger.bind(this);\n  }\n\n  stateChanger(data){\n    this.setState(data);\n  }\n\n  render() {\n    return (\n      <Router basename='/'>\n        <Header />\n        \n        <div className=\"flex-grow-1 d-flex flex-column px-fixed py-4 overflow-auto\">\n          <Switch>\n            <Route path=\"/menu\" render={()=><Menu stateChanger={this.stateChanger} userName={this.state.userName} standbyTime={this.state.standbyTime}/>} />\n            <Route path=\"/createGame\" render={()=><CreateGame userName={this.state.userName} />} />\n            <Route path=\"/game/:id\" render={({match})=><Game match={match} userName={this.state.userName}/>} />\n            <Route path=\"/no\" component={NoMatch} />\n            <Redirect from=\"/*\" to=\"/menu\" />\n            \n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\nconst NoMatch = ({ location }) => (\n  <div>\n    <h3>No match for <code>{location.pathname}</code></h3>\n  </div>\n)\nexport default App;","import React, { Component } from 'react';\r\n\r\nclass TestComponent extends Component {\r\n\r\n  render() {\r\n    console.log(\"Hello\")\r\n    return (\r\n      <React.Fragment>\r\n          <div>Hello</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestComponent;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}