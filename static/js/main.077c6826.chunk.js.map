{"version":3,"sources":["svg/cross.svg","svg/nought.svg","svg/noughtMuted.svg","svg/tick.svg","svg/pluss.svg","content/header/header.jsx","content/game/playersNames.jsx","content/clock/clock.jsx","service/database.js","content/game/game.jsx","content/menu/gameCard.jsx","content/menu/menu.jsx","content/createGame/createGame.jsx","testComponent.jsx","App.js","index.js"],"names":["module","exports","Header","react_default","a","createElement","className","react_router_dom","to","Component","PlayersNames","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","activePlayer1","activePlayer2","signPlayer2","nought","border","userName","player1","player2","noughtMuted","strokeCounter","undefined","src","cross","height","width","Clock","_this","state","elapsedTime","prevProps","startTime","tick","_this2","timerId","setInterval","clearInterval","timePlayed","Date","now","setState","time","toLocaleTimeString","Fragment","Database","key","value","table","get","push","localStorage","setItem","JSON","stringify","console","log","parse","getItem","removeItem","clear","Game","surrenderClick","bind","assertThisInitialized","menuClick","checkGameState","clickGameCell","getData","isOdd","endGame","n","_ref2","slicedToArray","_ref","indexRow","indexColumn","playerTurn","game","gameField","winner","newGameField","map","item","index","rewriteGame","assign","lastActivity","lastPosition","games","splice","match","params","id","set","cellNumber","startingPoint","numberToWin","range","horizontalSeries","xAxis","length","verticalSeries","yAxis","diagonalSeries","backDiagonalSeries","e","_this3","preventDefault","history","gameStatus","_this4","gamePhase","gameVieW","_this5","_this6","alert","textDisplay","customColumn","buttonName","buttonHandle","clock","endGameText","clock_clock","playersNames","sign","onClick","alt","style","withRouter","GameCard","bgColor","textColor1","textColor2","visibility","visibilityTick1","visibilityTick2","Menu","callCreateGame","handleClick","userNameInputChange","i","standbyTime","stateChanger","target","name","onChange","maxLength","cursor","gameCard","pluss","CreateGame","rowInput","columnInput","numberToWinInput","rowInputError","columnInputError","numberToWinInputError","rowInputHighlight","columnInputHighlight","numberToWinInputHighlight","backToMenu","createGame","handleInputChange","_this$setState","error","highlight","validationMessage","maxMoves","Math","round","highlightClass","defineProperty","event","row","Number","column","Array","fill","newGame","noValidate","maxWidth","action","method","htmlFor","type","aria-describedby","pattern","required","TestComponent","App","selectGame","data","basename","header","react_router","path","render","menu","createGame_createGame","game_game","component","NoMatch","from","testComponent","location","pathname","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.077c6826.chunk.js","sourcesContent":["module.exports = \"/static/media/cross.57c94804.svg\";","module.exports = \"/static/media/nought.fac8de41.svg\";","module.exports = \"/static/media/noughtMuted.f2ca6631.svg\";","module.exports = \"/static/media/tick.f498b4c6.svg\";","module.exports = \"/static/media/pluss.7fef4e83.svg\";","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <header className=\"bg-black px-fixed py-3 shadow\" >\r\n                <Link to=\"/\" className=\"text-white text-decoration-none\">Tic Tac Toe\r\n                    {/* <a className=\"text-white text-decoration-none\" onClick={this.goToMenu} href=\"#\">Tic Tac Toe</a> */}\r\n                </Link>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport cross from '../../svg/cross.svg';\r\nimport nought from '../../svg/nought.svg';\r\nimport noughtMuted from '../../svg/noughtMuted.svg';\r\n\r\nclass PlayersNames extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n\r\n\r\n\r\n        let signPlayer2=nought;\r\n        let border=\"border-bottom border-2 border-black\";\r\n        if (this.props.userName!==this.props.player1&&this.props.userName!==this.props.player2){\r\n            signPlayer2=noughtMuted;\r\n            border=\"border-bottom border-2 border-muted\";\r\n        }\r\n\r\n        let activePlayer1;\r\n        let activePlayer2;\r\n        if (!(this.props.strokeCounter%2)){\r\n            activePlayer1=border;\r\n            activePlayer2=undefined;\r\n        }else if (!!(this.props.strokeCounter%2)){\r\n            activePlayer1=undefined;\r\n            activePlayer2=border;\r\n        }else {\r\n            activePlayer1=undefined;\r\n            activePlayer2=undefined;\r\n        }\r\n    \r\n        return(\r\n            <div className={\"d-flex flex-shrink-0 justify-content-between \"}>\r\n                <div className={'d-flex align-items-center pb-1 mr-1'+' '+activePlayer1}>\r\n                    <span className=\"pr-1\" >{this.props.player1}</span>\r\n                    <img src={cross} height=\"20\" width=\"20\"/>\r\n                </div>\r\n                <div className={'d-flex align-items-center pb-1'+' '+activePlayer2}>\r\n                    <img className=\"pr-1\" src={signPlayer2} height=\"20\" />\r\n                    <span>{this.props.player2}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayersNames;","import React, {Component} from 'react';\r\n\r\nclass Clock extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            elapsedTime: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.startTime!==this.props.startTime)\r\n        this.tick();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timerId=setInterval(\r\n            ()=>this.tick(),\r\n            1000\r\n        );\r\n        this.tick();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    tick(){\r\n        let timePlayed=Date.now()-this.props.startTime+1000;\r\n        this.setState(()=>({\r\n            elapsedTime: timePlayed,\r\n        }));\r\n    }\r\n\r\n    render(){\r\n        let date=new Date(this.state.elapsedTime-(3*60*60*1000));\r\n        let time=date.toLocaleTimeString();\r\n        \r\n        return(<React.Fragment>{time}</React.Fragment>);\r\n    }\r\n}\r\n\r\nexport default Clock;","class Database{\r\n    static push(key,value){\r\n        let table=this.get(key);\r\n        if (table===null){\r\n            table=[];\r\n        }\r\n        table.push(value);\r\n        localStorage.setItem(key,JSON.stringify(table))\r\n        console.log(\"table\",table)\r\n    }\r\n    static set(key,value){\r\n        localStorage.setItem(key,JSON.stringify(value))\r\n    }\r\n    static get(key){\r\n        return JSON.parse(localStorage.getItem(key));\r\n    }\r\n    static remove(key){\r\n        localStorage.removeItem(key);\r\n    }\r\n    static clear(){\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nexport default Database;","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport PlayersNames from './playersNames';\r\nimport Clock from '../clock/clock';\r\nimport Database from '../../service/database';\r\nimport cross from '../../svg/cross.svg';\r\nimport nought from '../../svg/nought.svg';\r\nimport noughtMuted from '../../svg/noughtMuted.svg';\r\n\r\nclass Game extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={};\r\n        this.surrenderClick=this.surrenderClick.bind(this);\r\n        this.menuClick=this.menuClick.bind(this);\r\n        this.checkGameState=this.checkGameState.bind(this);\r\n        this.clickGameCell=this.clickGameCell.bind(this);\r\n        this.getData=this.getData.bind(this);\r\n        this.isOdd=this.isOdd.bind(this);\r\n        this.endGame=this.endGame.bind(this);\r\n    }\r\n\r\n    isOdd(n){\r\n        return !!(n%2);\r\n    }\r\n\r\n    clickGameCell([indexRow,indexColumn]){\r\n        let playerTurn=!this.isOdd(this.state.game.strokeCounter)?this.state.game.player1:this.state.game.player2;\r\n        if(this.state.game.gameField[indexRow][indexColumn]===null&&\r\n            this.state.game.winner===0&&\r\n            this.props.userName===playerTurn\r\n        ){\r\n            this.setState(state=>{\r\n                const newGameField=state.game.gameField.map((item,index)=>{\r\n                    if (index===indexRow){\r\n                        return (\r\n                            item.map((item,index)=>{\r\n                                if (index===indexColumn){\r\n                                    return item=this.isOdd(state.game.strokeCounter+1);\r\n                                }\r\n                                else return item;\r\n                            })\r\n                        );\r\n                    }\r\n                    else return item;\r\n                });\r\n\r\n                let rewriteGame=Object.assign({},state.game);\r\n                rewriteGame.lastActivity=Date.now();\r\n                rewriteGame.strokeCounter=state.game.strokeCounter+1;\r\n                rewriteGame.lastPosition=[indexRow,indexColumn];\r\n                rewriteGame.gameField=newGameField;\r\n                let games=Database.get(\"games\");\r\n                games.splice(this.props.match.params.id,1,rewriteGame);\r\n                Database.set(\"games\",games);                \r\n                return {\r\n                    game: rewriteGame,\r\n                };\r\n            }); \r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (this.state.game!==undefined&&this.state.game!==\"deleted\"){\r\n            if (this.state.game.winner===0){\r\n                if (this.checkGameState()){\r\n                    let winner=this.isOdd(this.state.game.strokeCounter)?1:2;\r\n                    this.setState({game: this.endGame(winner)})\r\n                }else if(this.state.game.cellNumber===this.state.game.strokeCounter){\r\n                    let drawGame=5;\r\n                    this.setState({game:this.endGame(drawGame)})\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkGameState(){\r\n        const startingPoint=this.state.game.lastPosition;\r\n        const numberToWin=this.state.game.numberToWin;\r\n        const range=numberToWin-1;\r\n        const gameField=this.state.game.gameField;\r\n        const strokeCounter=this.state.game.strokeCounter;\r\n\r\n        let horizontalSeries=0;\r\n        for(let xAxis=startingPoint[1]-range; xAxis<=startingPoint[1]+range; xAxis++){\r\n            if (xAxis>=0 && xAxis<gameField[startingPoint[0]].length){\r\n                if (gameField[startingPoint[0]][xAxis]==this.isOdd(strokeCounter)){\r\n                    horizontalSeries++;\r\n                    if (horizontalSeries==numberToWin) return true;\r\n                }\r\n                else {\r\n                    horizontalSeries=0;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let verticalSeries=0;\r\n        for(let yAxis=startingPoint[0]-range; yAxis<=startingPoint[0]+range; yAxis++){\r\n            if (yAxis>=0 && yAxis<gameField.length){\r\n                if (gameField[yAxis][startingPoint[1]]==this.isOdd(strokeCounter)){\r\n                    verticalSeries++;\r\n                    if (verticalSeries==numberToWin) return true;\r\n                }\r\n                else {\r\n                    verticalSeries=0;\r\n                }\r\n            }\r\n        }\r\n\r\n        let diagonalSeries=0;\r\n        for(let yAxis=startingPoint[0]-range, xAxis=startingPoint[1]-range; yAxis<=startingPoint[0]+range, xAxis<=startingPoint[1]+range; yAxis++, xAxis++){\r\n            if (yAxis>=0 && yAxis<gameField.length && xAxis>=0 && xAxis<gameField[startingPoint[0]].length){\r\n                if (gameField[yAxis][xAxis]==this.isOdd(strokeCounter)){\r\n                    diagonalSeries++;\r\n                    if (diagonalSeries==numberToWin) return true;\r\n                }\r\n                else {\r\n                    diagonalSeries=0;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let backDiagonalSeries=0;\r\n        for(let yAxis=startingPoint[0]+range, xAxis=startingPoint[1]-range; yAxis>=startingPoint[0]-range, xAxis<=startingPoint[1]+range; yAxis--, xAxis++){\r\n            if (yAxis>=0 && yAxis<gameField.length && xAxis>=0 && xAxis<gameField[startingPoint[0]].length){\r\n                if (gameField[yAxis][xAxis]==this.isOdd(strokeCounter)){\r\n                    backDiagonalSeries++;\r\n                    if (backDiagonalSeries==numberToWin) return true;\r\n                }\r\n                else {\r\n                    backDiagonalSeries=0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    surrenderClick(e){\r\n        e.preventDefault();\r\n        if (this.state.game.winner===0){\r\n            let winner=(()=>{\r\n                if (this.props.userName==this.state.game.player1){return 3;}\r\n                else if (this.props.userName==this.state.game.player2){return 4;}\r\n            })();\r\n            this.setState({game: this.endGame(winner)})\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    menuClick(e){\r\n        e.preventDefault();\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    endGame(gameStatus){\r\n        let rewriteGame=Object.assign({},this.state.game);\r\n        rewriteGame.lastActivity=Date.now();\r\n        rewriteGame.strokeCounter=this.state.game.strokeCounter-1;\r\n        rewriteGame.winner=gameStatus;\r\n        let games=Database.get(\"games\");\r\n        games.splice(this.props.match.params.id,1,rewriteGame);\r\n        Database.set(\"games\",games); \r\n        return rewriteGame;\r\n    }\r\n\r\n    getData(){\r\n        console.log(\"getData\")\r\n        let games=Database.get(\"games\");\r\n        if (games===null){\r\n            this.props.history.push(\"/\");\r\n        }\r\n        else{\r\n            let game=games[this.props.match.params.id];\r\n            this.setState(state=>{\r\n                if(game===\"deleted\"){\r\n                    if(state.game!==\"deleted\"){\r\n                        return {game:\"deleted\"}\r\n                    }\r\n                }\r\n                else{\r\n                    if(game.player2===undefined&&game.player1!==this.props.userName){\r\n                        game.player2=this.props.userName;\r\n                        let games=Database.get(\"games\");\r\n                        games.splice(this.props.match.params.id,1,game);\r\n                        Database.set(\"games\",games);\r\n                        return {game:game};\r\n                    }\r\n                    else if(\r\n                        state.game===undefined||\r\n                        state.game.startTime!=game.startTime||\r\n                        state.game.gamePhase!=game.gamePhase||\r\n                        state.game.gameVieW!=game.gameVieW||\r\n                        state.game.strokeCounter!=game.strokeCounter||\r\n                        state.game.winner!=game.winner\r\n                    ){\r\n                        return {game:game};\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timerId=setInterval(\r\n            ()=>this.getData(),\r\n            1000\r\n        );\r\n        this.getData();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    render(){\r\n    if(this.state.game===\"deleted\"){\r\n        return (\r\n            <div>\r\n                {(()=>{\r\n                    alert(\"истекло время жизни\");\r\n                    this.props.history.push(\"/\");\r\n                })()}\r\n            </div>\r\n            );\r\n    }\r\n    else\r\n        if (this.state.game!==undefined){\r\n\r\n            let textDisplay=\"\";\r\n            let signPlayer2=nought;\r\n            let customColumn=\"customColumn\";\r\n            let buttonName=\"SURRENDER\";\r\n            let buttonHandle=this.surrenderClick;\r\n            if(this.state.game.winner!==0){\r\n                buttonName=\"BACK\";\r\n                buttonHandle=this.menuClick;\r\n            }\r\n            if (this.props.userName!==this.state.game.player1&&this.props.userName!==this.state.game.player2){\r\n                textDisplay=\"text-muted\";\r\n                signPlayer2=noughtMuted;\r\n                customColumn=\"customColumnMuted\";\r\n                buttonName=\"BACK\";\r\n                buttonHandle=this.menuClick;\r\n            }\r\n\r\n            let date=new Date(this.state.game.lastActivity-this.state.game.startTime-(3*60*60*1000));\r\n            let clock=date.toLocaleTimeString();\r\n            let endGameText=\"\";\r\n            switch(this.state.game.winner){\r\n                case 1:\r\n                    endGameText=\"Winner \"+this.state.game.player1;\r\n                    break;\r\n                case 2:\r\n                    endGameText=\"Winner \"+this.state.game.player2;\r\n                    break;\r\n                case 3:\r\n                    endGameText=\"Surrender \"+this.state.game.player1;\r\n                    break;\r\n                case 4:\r\n                    endGameText=\"Surrender \"+this.state.game.player2;\r\n                    break;\r\n                case 5:\r\n                    endGameText=\"Draw Game\";\r\n                    break;\r\n                default:\r\n                    clock=<Clock startTime={this.state.game.startTime} />\r\n            }\r\n\r\n            return(\r\n                <React.Fragment>\r\n                    <div className={textDisplay}>\r\n                        <PlayersNames userName={this.props.userName} player1={this.state.game.player1} player2={this.state.game.player2} strokeCounter={this.state.game.strokeCounter}/>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column flex-grow-1 borde borde-3 flex-shrink-1 my-4 overflow-auto\">\r\n                        {this.state.game.gameField.map((item,indexRow)=>{\r\n                            return (\r\n                                <div className=\"d-flex customRow\" key={indexRow} >\r\n                                    {item.map((item,indexColumn)=>{\r\n                                        let sign=null;\r\n                                        if (item==1) sign=cross;\r\n                                        else if (item==0) sign=signPlayer2;\r\n                                        else sign=null;\r\n                                        return(\r\n                                            <div className={customColumn} onClick={()=>this.clickGameCell([indexRow,indexColumn])} key={indexColumn}>\r\n                                                <img src={sign} className=\"gameCell img-fluid\" alt=\"\"/>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"endGame\">{endGameText}</div>\r\n                    \r\n                    <div className={\"mx-auto my-4 h2 \"+textDisplay}>\r\n                        {clock}\r\n                    </div>\r\n                    \r\n                    <button className=\"flex-shrink-0 mx-auto btn btn-buttonColor\" style={{width:\"10rem\"}} onClick={buttonHandle}>{buttonName}</button>\r\n\r\n                </React.Fragment>\r\n            ); \r\n        } \r\n    else {\r\n        console.log(\"enter\")\r\n        return(\r\n            <div>...Loading</div>\r\n        );\r\n    }\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);","import React, {Component} from 'react';\r\nimport Clock from '../clock/clock';\r\nimport tick from '../../svg/tick.svg';\r\n\r\nclass GameCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let gamePhase=this.props.game.gamePhase;\r\n        let player1=this.props.game.player1;\r\n        let player2=this.props.game.player2;\r\n        let winner=this.props.game.winner;\r\n        let startTime=this.props.game.startTime;\r\n        let bgColor;\r\n        let textColor1;\r\n        let textColor2;\r\n        let visibility;\r\n        let visibilityTick1;\r\n        let visibilityTick2;\r\n        if (player2===undefined){\r\n            bgColor=\"bg-bgGameCardColor1\";\r\n            textColor1=\"text-white\";\r\n            textColor2=\"text-white\";\r\n            visibility=\"invisible\";\r\n            visibilityTick1=\"invisible\";\r\n            visibilityTick2=\"invisible\";\r\n        }\r\n        else if(winner===0){\r\n            bgColor=\"bg-bgGameCardColor2\";\r\n            textColor1=\"text-white\";\r\n            textColor2=\"text-white\";\r\n            visibility=\"visible\";\r\n            visibilityTick1=\"invisible\";\r\n            visibilityTick2=\"invisible\";\r\n        }\r\n        else{\r\n            bgColor=\"bg-bgGameCardColor3\";\r\n            visibility=\"visible\";\r\n            if (winner===1||winner===4){\r\n                textColor1=\"text-winnerColor\";\r\n                textColor2=\"text-black\";\r\n                visibilityTick1=\"visible\";\r\n                visibilityTick2=\"invisible\";\r\n            }\r\n            else if (winner===2||winner===3){\r\n                textColor1=\"text-black\";\r\n                textColor2=\"text-winnerColor\";\r\n                visibilityTick1=\"invisible\";\r\n                visibilityTick2=\"visible\";\r\n            }\r\n            else{\r\n                textColor1=\"text-black\";\r\n                textColor2=\"text-black\";\r\n                visibilityTick1=\"invisible\";\r\n                visibilityTick2=\"invisible\";\r\n            }\r\n        }\r\n        // switch (gamePhase){\r\n        //     case 0: //create game, waiting opponent\r\n        //     default:\r\n        //         bgColor=\"bg-bgGameCardColor1\";\r\n        //         textColor1=\"text-white\";\r\n        //         textColor2=\"text-white\";\r\n        //         visibility=\"invisible\";\r\n        //         visibilityTick1=\"invisible\";\r\n        //         visibilityTick2=\"invisible\";\r\n        //     break;\r\n        //     case 1://start game\r\n        //         bgColor=\"bg-bgGameCardColor2\";\r\n        //         textColor1=\"text-white\";\r\n        //         textColor2=\"text-white\";\r\n        //         visibility=\"visible\";\r\n        //         visibilityTick1=\"invisible\";\r\n        //         visibilityTick2=\"invisible\";\r\n        //     break;\r\n        //     case 2: //end game\r\n        //         bgColor=\"bg-bgGameCardColor3\";\r\n        //         visibility=\"visible\";\r\n        //         // if (player1Winner){\r\n        //         if (winner===1){\r\n        //             textColor1=\"text-winnerColor\";\r\n        //             textColor2=\"text-black\";\r\n        //             visibilityTick1=\"visible\";\r\n        //             visibilityTick2=\"invisible\";\r\n        //         }\r\n        //         else if (winner===2){\r\n        //         // else if (player2Winner){\r\n        //             textColor1=\"text-black\";\r\n        //             textColor2=\"text-winnerColor\";\r\n        //             visibilityTick1=\"invisible\";\r\n        //             visibilityTick2=\"visible\";\r\n        //         }\r\n        //         else{\r\n        //             textColor1=\"text-black\";\r\n        //             textColor2=\"text-black\";\r\n        //             visibilityTick1=\"invisible\";\r\n        //             visibilityTick2=\"invisible\";\r\n        //         }\r\n        //     break;\r\n        // }\r\n\r\n        return(\r\n            <div className={\"gameCard p-1 \"+bgColor}>\r\n                <div className=\"p-1 \">\r\n                    <div className=\"\" >\r\n                        <span className={\"pr-1 \"+textColor1}>{player1}</span>\r\n                        <img className={visibilityTick1} src={tick}/>\r\n                    </div>\r\n                    <div className={\"border-top border-black pt-1 \"+visibility}>\r\n                        <span className={\"pr-1 \"+textColor2}>{player2}</span>\r\n                        <img className={visibilityTick2} src={tick}/>\r\n                    </div>\r\n                </div>    \r\n                <div className=\"\">\r\n                    <Clock startTime={startTime} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameCard;","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Database from '../../service/database';\r\nimport GameCard from './gameCard';\r\nimport pluss from '../../svg/pluss.svg'\r\n\r\nclass Menu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            games:[],\r\n        }\r\n        this.callCreateGame=this.callCreateGame.bind(this);\r\n        this.handleClick=this.handleClick.bind(this);\r\n        this.getData=this.getData.bind(this);\r\n        this.userNameInputChange=this.userNameInputChange.bind(this);\r\n    }\r\n\r\n    handleClick(index){\r\n        // this.props.stateChanger({screenId: 2,selectGame: index});\r\n        this.props.history.push(\"/game/\"+index);\r\n    }\r\n\r\n    callCreateGame(e){\r\n        e.preventDefault();\r\n        this.props.history.push(\"/createGame\");\r\n    }\r\n\r\n    getData(){\r\n      let games=Database.get(\"games\");\r\n      this.setState(state=>{\r\n        if(games===null){\r\n          if(state.games.length!==0){\r\n            return {games:[]};\r\n          }\r\n        }\r\n        else {\r\n          for (let i=0;i<games.length;i++){\r\n            if (games[i].lastActivity+this.props.standbyTime<Date.now()){\r\n              games.splice(i,1,\"deleted\");\r\n              Database.set(\"games\",games);\r\n            }\r\n            if(games[i]===\"deleted\"){\r\n              if(state.games[i]!=games[i]){\r\n                return {games:games};\r\n              }\r\n            }\r\n            else{\r\n              if (\r\n                state.games.length!=games.length||\r\n                state.games[i].gamePhase!=games[i].gamePhase||\r\n                state.games[i].winner!=games[i].winner||\r\n                state.games[i].player1!=games[i].player1||\r\n                state.games[i].player2!=games[i].player2\r\n              ){\r\n                return {games:games};\r\n              }\r\n            }\r\n          } \r\n        }\r\n      });\r\n    }\r\n    \r\n    userNameInputChange(e){\r\n      this.props.stateChanger({userName: e.target.value});\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.timerId=setInterval(\r\n          ()=>this.getData(),\r\n          1000\r\n        );\r\n        this.getData();\r\n    }\r\n  \r\n    componentWillUnmount(){\r\n      clearInterval(this.timerId);\r\n    }\r\n\r\n    render(){\r\n      console.log(\"!!render this.state.games:\",this.state.games)\r\n        return(\r\n            <React.Fragment>\r\n                <div>\r\n                    <input className=\"pb-2 flex-shrink-0 border-bottom d-flex form-control-plaintext\" style={{width:\"70%\"}} name=\"userNameInput\" value={this.props.userName} onChange={this.userNameInputChange} maxLength=\"20\" />\r\n                    {/* <span className=\"pb-2 flex-shrink-0 border-bottom d-flex\" style={{width:\"70%\"}} >{this.props.userName}</span> */}\r\n                </div>\r\n                <div className=\"d-flex flex-wrap flex-grow-0 borde borde-3 flex-shrink-1 my-4 overflow-auto gameCardList\">\r\n                    {this.state.games.map((item,index)=>{\r\n                        if(this.state.games[index]!==\"deleted\"){\r\n                            return (\r\n                                <div key={index} onClick={()=>{this.handleClick(index)}} style={{cursor: \"pointer\"}}>\r\n                                    <GameCard game={this.state.games[index]} />\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n                <button className=\"flex-shrink-0 mt-auto ml-auto btn btn-buttonColor shadow rounded-circle\" style={{width:\"50px\", height:\"50px\"}} onClick={this.callCreateGame}>\r\n                    <img src={pluss} className=\"img-fluid\" alt=\"\"/>\r\n                </button>\r\n            </React.Fragment>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default withRouter(Menu);","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Database from '../../service/database'\r\nimport cross from '../../svg/cross.svg';\r\nimport nought from '../../svg/nought.svg';\r\nimport noughtMuted from '../../svg/noughtMuted.svg';\r\n\r\nclass CreateGame extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            rowInput: '4',\r\n            columnInput: '4',\r\n            numberToWinInput: '4',\r\n            rowInputError:'',\r\n            columnInputError:'',\r\n            numberToWinInputError:'',\r\n            rowInputHighlight:'',\r\n            columnInputHighlight:'',\r\n            numberToWinInputHighlight:'',\r\n        }\r\n        this.backToMenu=this.backToMenu.bind(this);\r\n        this.createGame=this.createGame.bind(this);\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(e){\r\n        e.preventDefault();\r\n        const name=e.target.name;\r\n        const error=name+'Error';\r\n        const highlight=name+'Highlight';\r\n        \r\n        if(name==\"numberToWinInput\"){\r\n            var numberToWinInputError=e.target.validationMessage;\r\n            var maxMoves=Math.round(+this.state.rowInput*this.state.columnInput/2);\r\n            if((+e.target.value>+this.state.rowInput)&&(+e.target.value>+this.state.columnInput)||(+e.target.value>maxMoves)){\r\n                numberToWinInputError=\"больше чем игровое поле\";\r\n            }\r\n        }\r\n        else if(name==\"rowInput\"){\r\n            var maxMoves=Math.round(+e.target.value*this.state.columnInput/2);\r\n            if((+this.state.numberToWinInput>+e.target.value)&&(+this.state.numberToWinInput>+this.state.columnInput)||(+this.state.numberToWinInput>maxMoves)){\r\n                numberToWinInputError=\"больше чем игровое поле\";\r\n            }\r\n        }\r\n        else if(name==\"columnInput\"){\r\n            var maxMoves=Math.round(+this.state.rowInput*e.target.value/2);\r\n            if((+this.state.numberToWinInput>+this.state.rowInput)&&(+this.state.numberToWinInput>+e.target.value)||(+this.state.numberToWinInput>maxMoves)){\r\n                numberToWinInputError=\"больше чем игровое поле\";\r\n            }\r\n        }\r\n        const numberToWinInputHighlight=numberToWinInputError?\"is-invalid\":\"is-valid\";\r\n\r\n        const highlightClass=e.target.validationMessage?\"is-invalid\":\"is-valid\";\r\n        this.setState({\r\n            [name]: e.target.value,\r\n            [error]: e.target.validationMessage,\r\n            [highlight]: highlightClass,\r\n            numberToWinInputError: numberToWinInputError,\r\n            numberToWinInputHighlight: numberToWinInputHighlight,\r\n        });\r\n    }\r\n    \r\n    backToMenu(e){\r\n        e.preventDefault();        \r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    createGame(event){\r\n        event.preventDefault();\r\n        if (!this.state.rowInputError&&!this.state.columnInputError&&!this.state.numberToWinInputError){\r\n            let row=Number(this.state.rowInput);\r\n            let column=Number(this.state.columnInput);\r\n            let numberToWin=Number(this.state.numberToWinInput);\r\n            let gameField=new Array(row);\r\n\r\n            for (let i=0;i<gameField.length;i++){\r\n                gameField[i]=new Array(column);\r\n                gameField[i].fill(null);\r\n            }\r\n\r\n            let newGame={\r\n                // gameId: localStorage.length,\r\n                gamePhase: 0,//create\r\n                startTime: Date.now(),\r\n                lastActivity: Date.now(),\r\n                strokeCounter: 0,\r\n                numberToWin: numberToWin,\r\n                lastPosition: [0,0],\r\n                gameField: gameField,\r\n                cellNumber: row*column,\r\n                winner: 0,//1-player1,2-player2,3-surrender pl1,4-surrender pl2,5-draw game\r\n                player1: this.props.userName,\r\n                player2:undefined,\r\n                // \"Player 2\",\r\n            }\r\n            Database.push(\"games\",newGame)\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <form className=\"mx-auto p-4 mb-4 bg-white  shadow-sm rounded needs-validation\" noValidate style={{maxWidth: \"700px\"}} action=\"#\" method=\"post\">\r\n                <div className=\"mb-4 mx-auto flex-grow-1\" style={{maxWidth: '300px'}}>\r\n\r\n                    <div className=\"form-group row\">\r\n                        {/* <div className=\"col-sm-7\"> */}\r\n                            <label htmlFor=\"inputRow\" className=\"col-sm-7 col-form-label\">Number of rows\r\n                                <small id=\"inputRowHelpBlock\" className=\"form-text text-muted\">1-999</small>\r\n                            </label>\r\n                        {/* </div> */}\r\n                        <div className=\"col-sm-5\">\r\n                            <input type=\"text\" className={\"form-control \"+this.state.rowInputHighlight} id=\"inputRow\" value={this.state.rowInput} name=\"rowInput\" onChange={this.handleInputChange} aria-describedby=\"inputRowHelpBlock\" pattern=\"[1-9]{1}\\d{0,2}\" required/>\r\n                        </div>\r\n                        <div className=\"invalid-feedback d-block px-3\">\r\n                            {this.state.rowInputError}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"inputColumn\" className=\"col-sm-7 col-form-label\">Number of columns\r\n                            <small id=\"inputColumnHelpBlock\" className=\"form-text text-muted\">1-999</small>\r\n                        </label>\r\n                        <div className=\"col-sm-5\">\r\n                            <input type=\"text\" className={\"form-control \"+this.state.columnInputHighlight} id=\"inputColumn\" value={this.state.columnInput} name=\"columnInput\" onChange={this.handleInputChange} aria-describedby=\"inputColumnHelpBlock\" pattern=\"[1-9]{1}\\d{0,2}\" required/>\r\n                        </div>\r\n                        <div className=\"invalid-feedback d-block px-3\">\r\n                            {this.state.columnInputError}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"inputNumberToWin\" className=\"col-sm-7 col-form-label\">Number to win\r\n                            <small id=\"inputNumberToWinHelpBlock\" className=\"form-text text-muted\">more then null and less than max field</small>\r\n                        </label>\r\n                        <div className=\"col-sm-5\">\r\n                            <input type=\"text\" className={\"form-control \"+this.state.numberToWinInputHighlight} id=\"inputNumberToWin\" value={this.state.numberToWinInput} name=\"numberToWinInput\" onChange={this.handleInputChange} aria-describedby=\"inputNumberToWinHelpBlock\" pattern=\"[1-9]{1}\\d{0,2}\" required/>\r\n                        </div>\r\n                        <div className=\"invalid-feedback d-block px-3\">\r\n                            {this.state.numberToWinInputError}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row justify-content-between\">\r\n                        <div className=\"col-auto pb-2\">\r\n                            <button className=\"btn btn-warning \" type=\"reset\" onClick={this.backToMenu}>Cancel</button>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <button className=\"btn btn-buttonColor \" type=\"submit\" onClick={this.createGame}>Create game</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default withRouter(CreateGame);","import React, { Component } from 'react';\r\n\r\nclass TestComponent extends Component {\r\n\r\n  render() {\r\n    console.log(\"Hello\")\r\n    return (\r\n      <React.Fragment>\r\n          <div>Hello</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestComponent;\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route,Switch,Redirect} from 'react-router-dom';\nimport './styles/App.scss';\nimport Header from './content/header/header';\nimport Game from './content/game/game';\nimport Menu from './content/menu/menu';\nimport CreateGame from './content/createGame/createGame';\nimport TestComponent from './testComponent';\n\nclass App extends Component {\n  constructor(props){\n      super(props);\n      this.state={\n          // screenId: 0,//!!Menu\n          selectGame: 0,\n          standbyTime: (1*60*1000),//10sec//5 min\n          userName: \"user Name\",//!!Menu\n      }\n      this.stateChanger=this.stateChanger.bind(this);\n  }\n\n  stateChanger(data){\n    this.setState(data);\n  }\n\n  render() {\n    return (\n      <Router basename='/'>\n        <Header />\n        \n        <div className=\"flex-grow-1 d-flex flex-column px-fixed py-4 border border-primary overflow-auto\">\n          <Switch>\n            {/* <Route path=\"/menu\" component={Menu} /> */}\n            <Route path=\"/menu\" render={()=><Menu stateChanger={this.stateChanger} userName={this.state.userName} standbyTime={this.state.standbyTime}/>} />\n            <Route path=\"/createGame\" render={()=><CreateGame userName={this.state.userName} />} />\n            <Route path=\"/game/:id\" render={({match})=><Game match={match} userName={this.state.userName}/>} />\n            <Route path=\"/no\" component={NoMatch} />\n            <Redirect from=\"/*\" to=\"/menu\" />\n            \n          </Switch>\n        </div>\n\n        <TestComponent />\n      </Router>\n    );\n  }\n}\nconst NoMatch = ({ location }) => (\n  <div>\n    <h3>No match for <code>{location.pathname}</code></h3>\n  </div>\n)\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}